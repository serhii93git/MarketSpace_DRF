Проект "МarketSpace" є онлайн-платформою для розміщення оголошень про купівлю та
продаж товарів. Ця документація надає огляд API та основних можливостей проекту.
Загальна структура проекту
Проект "МarketSpace" має наступну структуру:
• Категорії (Categories): Керування категоріями товарів.
• Коментарі (Comments): Коментарі до товарів.
• Улюблені (Favorites): Відстеження улюблених товарів користувачів.
• Продукти (Products): Операції з товарами та їх зображеннями.
• Пошук (Search): Пошук товарів за назвою.
• Користувачі (Users): Керування користувачами та їх профілями.
Категорії (Categories)
• Модель категорій: Categories
• cat_name: Назва категорії (тип: CharField).
• cat_description: Опис категорії (тип: TextField).
• cat_image: Зображення категорії (тип: ImageField).
• parent: Батьківська категорія (тип: ForeignKey).
• Представлення (Views): CategoriesView
• Отримання списку категорій.
• Серіалізатор (Serializers): CategorySerializer
• Серіалізація моделі категорій.
• URL-адреси (URLs):
• /api/cat/: Отримання списку категорій.
Коментарі (Comments)
• Модель коментарів: Comments
• user: Користувач, що залишив коментар (тип: ForeignKey).
• text: Текст коментаря (тип: TextField).
• parent: Батьківський коментар (тип: ForeignKey).
• time_create: Дата та час створення коментаря (тип: DateTimeField).
• time_update: Дата та час оновлення коментаря (тип: DateTimeField).
• product: Товар, до якого прикріплений коментар (тип: ForeignKey).
• Представлення (Views):
• CommentAddView: Створення нового коментаря.
• CommentUpdateView: Оновлення, видалення та отримання деталей про
коментар.
• Серіалізатор (Serializers): CommentSerializer
• Серіалізація моделі коментарів.
• URL-адреси (URLs):
• /api/comment/: Створення нового коментаря.
• /api/comment/<int:pk>: Оновлення, видалення та отримання деталей про
коментар.
Улюблені (Favorites)
• Модель вибраних продуктів: SelectedProduct
• users: Користувачі, які додали продукт до улюблених (тип: ManyToManyField).
• products: Вибрані продукти (тип: ManyToManyField).
• date_added: Дата та час додавання продукту до улюблених (тип:
DateTimeField).
• Представлення (Views):
• SelectedProductAddView: Додавання продукту до списку улюблених.
• SelectedProductListView: Перегляд списку улюблених продуктів.
• SelectedProductDeleteView: Видалення продукту зі списку улюблених.
• Серіалізатор (Serializers): SelectedProductSerializer
• Серіалізація моделі вибраних продуктів.
• URL-адреси (URLs):
• /api/fav/: Додавання продукту до списку улюблених.
• /api/fav-list/: Перегляд списку улюблених продуктів.
• /api/fav/<int:pk>: Видалення продукту зі списку улюблених.
Продукти (Products)
• Модель продуктів: Product
• title: Назва продукту (тип: CharField).
• description: Опис продукту (тип: TextField).
• time_create: Дата та час створення продукту (тип: DateTimeField).
• time_update: Дата та час оновлення продукту (тип: DateTimeField).
• price: Ціна продукту (тип: DecimalField).
• is_active: Статус активності продукту (тип: BooleanField).
• contacts: Контактна інформація продавця (тип: TextField).
• image1, image2, image3: Зображення продукту (тип: ImageField).
• category: Категорія, до якої належить продукт (тип: ForeignKey).
• created_by: Користувач, який створив продукт (тип: ForeignKey).
• Представлення (Views):
• ProductsListView: Отримання списку продуктів, створення нового продукту.
• ProductDetailView: Отримання деталей, оновлення та видалення продукту.
• ImageAddView: Додавання зображень до продукту.
• ImageListView: Перегляд списку зображень.
• ImageDetailView: Отримання деталей, оновлення та видалення зображення.
• Серіалізатор (Serializers): ProductSerializer, ImageSerializer
• Серіалізація моделей продуктів та зображень.
• URL-адреси (URLs):
• /api/prod/: Отримання списку продуктів, створення нового продукту.
• /api/prod/<int:pk>: Отримання деталей, оновлення та видалення продукту.
• /prod/?sort_by=-time_create: Сортування за датою створення у низхідному
порядку
• /prod/?sort_by=price: Сортування за ціною у зростаючому порядку.
Пошук (Search)
• Представлення (Views): SearchView
• Пошук товарів за назвою.
• Серіалізатор (Serializers): ProductSerializer
• Серіалізація моделі продуктів.
• URL-адреси (URLs):
• /api/search/: Пошук товарів за назвою. # /search/?search_query='назва_товару'
Користувачі (Users)
• Модель користувачів: Users
• profile_image: Зображення профілю користувача (тип: ImageField).
• phone_number: Номер телефону користувача (тип: CharField).
• add_info: Додаткова інформація про користувача (тип: TextField).
• Представлення (Views):
• UserAddView: Створення нового користувача.
• UserUpdateView: Оновлення, видалення та отримання деталей про
користувача.
• Серіалізатор (Serializers): UserSerializer
• Серіалізація моделі користувачів.
• URL-адреси (URLs):
• /api/user/<int:pk>: Оновлення, видалення та отримання деталей про
користувача.
Категорії (Categories)
Отримати список категорій
• URL: /api/cat/
• Метод: GET
• Опис: Цей ендпоінт дозволяє отримати список всіх доступних категорій товарів.
• Параметри: Немає
• Відповідь:
• Код 200: Успішний запит. Повертає список категорій у форматі JSON.
• Код 404: Категорії не знайдено.
Коментарі (Comments)
Створити коментар
• URL: /api/comment/
• Метод: POST
• Опис: Цей ендпоінт дозволяє створити новий коментар для певного товару.
• Параметри:
• user (integer): Ідентифікатор користувача, який залишає коментар.
• text (string): Текст коментаря.
• product (integer): Ідентифікатор товару, до якого залишається коментар.
• Відповідь:
• Код 201: Коментар успішно створено. Повертає створений об'єкт у форматі
JSON.
• Код 400: Некоректні дані запиту.
Оновити коментар
• URL: /api/comment/<int:pk>
• Метод: PUT, PATCH
• Опис: Цей ендпоінт дозволяє оновити існуючий коментар за його ідентифікатором.
• Параметри:
• pk (integer): Ідентифікатор коментаря, який потрібно оновити.
• Відповідь:
• Код 200: Коментар успішно оновлено. Повертає оновлений об'єкт у форматі
JSON.
• Код 404: Коментар не знайдено.
Видалити коментар
• URL: /api/comment/<int:pk>
• Метод: DELETE
• Опис: Цей ендпоінт дозволяє видалити існуючий коментар за його ідентифікатором.
• Параметри:
• pk (integer): Ідентифікатор коментаря, який потрібно видалити.
• Відповідь:
• Код 204: Коментар успішно видалено.
• Код 404: Коментар не знайдено.
Улюблені (Favorites)
Додати товар до улюблених
• URL: /api/fav/
• Метод: POST
• Опис: Цей ендпоінт дозволяє додати певний товар до списку улюблених для
поточного користувача.
• Параметри:
• user (integer): Ідентифікатор користувача, який додає товар до улюблених.
• product (integer): Ідентифікатор товару, який додається до улюблених.
• Відповідь:
• Код 201: Товар успішно додано до улюблених. Повертається створений об'єкт
у форматі JSON.
• Код 400: Некоректні дані запиту.
Видалити товар з улюблених
• URL: /api/fav/<int:pk>
• Метод: DELETE
• Опис: Цей ендпоінт дозволяє видалити певний товар зі списку улюблених для
поточного користувача.
• Параметри:
• pk (integer): Ідентифікатор товару в списку улюблених, який потрібно
видалити.
• Відповідь:
• Код 204: Товар успішно видалено зі списку улюблених.
Користувачі (Users)
Створити користувача
• URL: /api/user/
• Метод: POST
• Опис: Цей ендпоінт дозволяє створити нового користувача.
• Параметри:
• username (string): Ім'я користувача.
• password (string): Пароль користувача.
• profile_image (image): Зображення профілю (необов'язково).
• phone_number (string): Номер телефону користувача.
• add_info (string): Додаткова інформація про користувача (необов'язково).
• Відповідь:
• Код 201: Користувача успішно створено. Повертається створений об'єкт у
форматі JSON.
• Код 400: Некоректні дані запиту.
Оновити інформацію про користувача
• URL: /api/user/<int:pk>
• Метод: PUT, PATCH
• Опис: Цей ендпоінт дозволяє оновити інформацію про існуючого користувача за його
ідентифікатором.
• Параметри:
• pk (integer): Ідентифікатор користувача, якого потрібно оновити.
• Відповідь:
• Код 200: Інформацію про користувача успішно оновлено. Повертається
оновлений об'єкт у форматі JSON.
• Код 404: Користувача не знайдено.
Реєстрація та Аутентифікація:
1. Реєстрація нового користувача
• URL: /accounts/signup/
• Метод: POST
• Опис: Даний ендпоінт дозволяє користувачам зареєструватися в системі,
вводячи необхідну інформацію, таку як ім'я, електронна пошта та пароль.
• Параметри:
• username (string): Ім'я користувача.
• email (string): Електронна пошта користувача.
• password1 (string): Пароль користувача.
• password2 (string): Підтвердження пароля користувача.
• Відповідь:
• Код 200: Успішна реєстрація. Користувач створений.
• Код 400: Помилка у форматі даних або користувач з такою адресою
електронної пошти вже існує.
2. Аутентифікація користувача
• URL: /accounts/login/
• Метод: POST
• Опис: Даний ендпоінт дозволяє користувачам увійти в систему, надаючи свою
адресу електронної пошти та пароль.
• Параметри:
• email (string): Електронна пошта користувача.
• password (string): Пароль користувача.
• Відповідь:
• Код 200: Успішний вхід в систему. Користувач автентифікований.
• Код 400: Помилка у форматі даних або невірна адреса електронної
пошти або пароль.
Авторизація через Google:
1. Авторизація через Google
• URL: /accounts/google/login/
• Метод: GET
• Опис: Цей ендпоінт перенаправляє користувача на сторінку авторизації
Google, де він може увійти в свій обліковий запис Google та надати дозвіл на
доступ до даних вашого додатку.
• Параметри:
• Немає параметрів.
• Відповідь:
• Код 302: Успішний перехід на сторінку авторизації Google.
Скидання пароля:
3. Скидання пароля
• URL: /accounts/password/reset/
• Метод: POST
• Опис: Даний ендпоінт дозволяє користувачам скидати свій пароль, вводячи
свою адресу електронної пошти.
• Параметри:
• email (string): Електронна пошта користувача.
• Відповідь:
• Код 200: Інструкції щодо скидання пароля надіслані на вказану
електронну пошту.
• Код 400: Помилка у форматі даних або користувач з такою адресою
електронної пошти не знайдений.
Список основних ендпоінтів з коротким описом:
1. Категорії (Categories)
• GET /api/cat/: Отримати список усіх категорій товарів.
2. Коментарі (Comments)
• POST /api/comment/: Створити новий коментар.
• PUT /api/comment/<int:pk>/: Оновити існуючий коментар за його
ідентифікатором.
• DELETE /api/comment/<int:pk>/: Видалити коментар за його
ідентифікатором.
3. Обрані товари (Favorites)
• POST /api/fav/: Додати товар до списку обраних.
• GET /api/fav-list/: Отримати список усіх обраних товарів для поточного
користувача.
• DELETE /api/fav/<int:pk>/: Видалити товар зі списку обраних за його
ідентифікатором.
4. Товари (Products)
• GET /api/prod/: Отримати список усіх товарів.
• POST /api/prod/: Створити новий товар.
• PUT /api/prod/<int:pk>/: Оновити існуючий товар за його ідентифікатором.
• DELETE /api/prod/<int:pk>/: Видалити товар за його ідентифікатором.
5. Пошук (Search)
• GET /api/search/: Пошук товарів за їх назвою.
6. Користувачі (Users)
• GET /api/user/<int:pk>/: Отримати дані користувача за його ідентифікатором.
• PUT /api/user/<int:pk>/: Оновити дані користувача за його ідентифікатором.
7. Автентифікація (Django Allauth – містить уже готові прості HTML шаблони)
• POST /accounts/login/: Авторизація користувача.
• POST /accounts/logout/: Вихід користувача.
• POST /accounts/signup/: Реєстрація нового користувача.
• POST /accounts/google/login/: Авторизація через Google.
Ці ендпоінти також відносяться до Django Allauth:
1. accounts/reauthenticate/ [name='account_reauthenticate']: Ендпоінт для повторної
аутентифікації користувача.
2. accounts/password/change/ [name='account_change_password']: Ендпоінт для зміни
пароля користувача.
3. accounts/password/set/ [name='account_set_password']: Ендпоінт для встановлення
пароля користувача.
4. accounts/inactive/ [name='account_inactive']: Ендпоінт для неактивних облікових
записів користувачів.
5. accounts/email/ [name='account_email']: Ендпоінт для керування електронною
поштою користувача.
6. accounts/confirm-email/ [name='account_email_verification_sent']: Ендпоінт для
підтвердження відправки електронного листа з посиланням на підтвердження
електронної адреси.
7. accounts/^confirm-email/(?P<key>[-:\w]+)/$ [name='account_confirm_email']:
Ендпоінт для підтвердження електронної адреси користувача за допомогою ключа.
8. accounts/password/reset/ [name='account_reset_password']: Ендпоінт для скидання
пароля користувача.
9. accounts/password/reset/done/ [name='account_reset_password_done']: Ендпоінт для
підтвердження успішного скидання пароля.
10. accounts/^password/reset/key/(?P<uidb36>[0-9A-Za-z]+)-(?P<key>.+)/$
[name='account_reset_password_from_key']: Ендпоінт для скидання пароля за
допомогою спеціального ключа.
11. accounts/password/reset/key/done/ [name='account_reset_password_from_key_done']:
Ендпоінт для підтвердження успішного скидання пароля за допомогою ключа.
12. accounts/social/: Ендпоінт для соціальної автентифікації (наприклад, через Facebook,
Twitter тощо).
13. accounts/google/login/token/ [name='google_login_by_token']: Ендпоінт для входу за
допомогою токена Google.